Python 3.7.2 (v3.7.2:9a3ffc0492, Dec 24 2018, 02:44:43) 
[Clang 6.0 (clang-600.0.57)] on darwin
Type "help", "copyright", "credits" or "license()" for more information.
>>> 
========= RESTART: /Users/prabhsingh/Documents/a2_part1_300057572.py =========
>>> print_factors(24)
factors of 24 = 1 2 3 4 6 8 12 24 True
>>> print_factors(1)
factors of 1 = 1 False
>>> print_factors(5)
factors of 5 = 1 5 False
>>> print_factors(25)
factors of 25 = 1 5 25 False
>>> triangle(0)
>>> triangle(1)
1
>>> triangle(3)
12345
 234 
  3  
>>> triangle(5)
123456789
 2345678 
  34567  
   456   
    5    
>>> triangle(6)
12345678901
 234567890 
  3456789  
   45678   
    567    
     6     
>>> approxPi(0.01)
3.1465677471829556
>>> approxPi(0.0000001)
3.1415927035898146
>>> is_fib_like([])
True
>>> is_fib_like([42])
True
>>> is_fib_like([18,42])
True
>>> is_fib_like([1,1,1])
False
>>> is_fib_like([1,2,3])
True
>>> is_fib_like([0,0,0,0,0])
True
>>> is_fib_like([1,1,2,3,5,8,13,21])
True
>>> is_fib_like([2,1,3,4,7,11,18,29])
True
>>> is_fib_like([1,1,2,3,5,12,17])
False
>>> longest_name(5)
name #1? ryan
name #2? TITO
name #3? John
name #4? lAuRaLyN
name #5? SujaN
Lauralyn's name is longest
>>> longest_name(7)
name #1? PeTer
name #2? eric
name #3? RAFAEL
name #4? brian
name #5? sarina
name #6? LIOR
name #7? EmIlIo
Rafael's name is longest
(There was a tie!)
>>> encrypt('3941068257','132')
'914'
>>> encrypt('3941068257','111')
'999'
>>> 
